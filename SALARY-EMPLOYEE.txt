

create DATABASE assignment;

use assignment;


# CREATING A TABLE FOR SALARY

create table salary
(
    id int,
    employee_id int,
    amount int,
    pay_date date
);

#CREATING A TABLE FOR EMPLOYEE

create table if not exists employee
(
    employee_id int,
    department_id int
);

#INSERTING DATA IN SALARY TABLE

insert into salary value(1,1,9000,'2017-03-31'),
(2,2,6000,'2017-03-31'),
(3,3,10000,'2017-03-31'),
(4,1,7000,'2017-02-28'),
(5,2,6000,'2017-02-28'),
(6,3,8000,'2017-02-28');

#INSERTING DATA IN EMPLOYEE TABLE

insert into employee value(1,1),
(2,2),
(3,2);

#COMMANDS AS PER REQUIRED CONDITIONS

select 
    pay_month,
    department_id, 
    case when dept_avg > comp_avg then 'higher' when dept_avg < comp_avg then 'lower' else 'same' end comparison
from (
        select  date_format(b.pay_date, '%Y-%m') pay_month, a.department_id, avg(b.amount) dept_avg,  d.comp_avg
        from employee a 
        inner join salary b
            on (a.employee_id = b.employee_id) 
        inner join (select date_format(c.pay_date, '%Y-%m') pay_month, avg(c.amount) comp_avg 
                    from salary c 
                    group by date_format(c.pay_date, '%Y-%m')) d 
            on ( date_format(b.pay_date, '%Y-%m') = d.pay_month)
group by date_format(b.pay_date, '%Y-%m'), department_id, d.comp_avg) final